{"version":3,"sources":["Selectize.js"],"names":["define","skylark","$","constants","utils","MicroEvent","highlight","Selectize","$input","settings","i","n","dir","input","selectize","this","computedStyle","window","getComputedStyle","getPropertyValue","currentStyle","direction","parents","attr","extend","order","tabIndex","tagType","tagName","toLowerCase","TAG_SELECT","TAG_INPUT","rtl","test","eventNS","count","highlightedValue","isBlurring","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","options","userOptions","items","renderCache","onSearchChange","loadThrottle","debounce","sifter","Sifter","diacritics","length","registerOption","registerOptionGroup","mode","maxItems","hideSelected","initializePlugins","plugins","setupCallbacks","setupTemplates","setup","mixin","MicroPlugin","logError","explanation","prototype","$wrapper","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","self","$window","$document","document","addClass","wrapperClass","inputClass","appendTo","dropdownParent","dropdownClass","hide","dropdownContentClass","copyClassesToDropdown","css","width","style","names","join","placeholder","splitOn","delimiter","delimiterEscaped","replace","RegExp","type","on","e","stopImmediatePropagation","onOptionHover","apply","arguments","onOptionSelect","watchChildEvent","onItemSelect","autoGrow","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","blur","onBlur","focus","onFocus","paste","onPaste","IS_MAC","shiftKey","keyCode","KEY_CTRL","KEY_SHIFT","KEY_CMD","target","parentNode","has","revertSettings","$children","children","detach","tabindex","after","isArray","setValue","SUPPORTS_VALIDITY_API","preventDefault","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","disable","onChange","data","trigger","preload","field_label","labelField","field_optgroup","optgroupLabelField","templates","optgroup","html","optgroup_header","escape","option","item","option_create","render","key","fn","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","hasOwnProperty","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","setTimeout","isFull","pastedText","val","match","splitInput","trim","split","createItem","character","String","fromCharCode","which","create","KEY_TAB","KEY_A","selectAll","KEY_ESC","KEY_N","ctrlKey","altKey","KEY_DOWN","$next","getAdjacentOption","setActiveOption","KEY_P","KEY_UP","$prev","KEY_RETURN","currentTarget","KEY_LEFT","advanceSelection","KEY_RIGHT","selectOnTab","KEY_BACKSPACE","KEY_DELETE","deleteSelection","metaKey","value","refreshOptions","callback","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","createOnBlur","$target","hasClass","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","Math","max","addOption","removeClass","triggerHandler","getValue","silent","events","debounce_events","addItems","$item","eventName","idx","begin","end","swap","$last","Array","indexOf","childNodes","push","splice","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","isset","height","outerHeight","scrollTop","offset","top","stop","scrollDuration","slice","opacity","position","left","getScoreFunction","query","getSearchOptions","sort","sortField","field","fields","searchField","conjunction","searchConjunction","nesting","search","result","calculateScore","score","Error","hash_key","id","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","appendChild","lockOptgroupOrder","a","b","$order","domToString","dom","removeHighlight","tokens","regex","canCreate","prepend","addPrecedence","find","valueField","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","each","getElementWithValue","$options","index","eq","$els","getAttribute","values","buffer","isPending","control","insertBefore","firstChild","value_next","wasFull","insertAtCaret","remove","persist","caret","lock","once","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","opts","label","escape_html","removeAttr","force","visibility","display","getBoundingClientRect","$el","el","selection","option_select","$option_select","$tail","getSelection","start","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","before","append","enable","destroy","off","show","removeData","$testInput","undefined","body","templateName","cache","disabledField","clearCache","filter","createFilter","attach"],"mappings":"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","file":"../Selectize.js","sourcesContent":["define([\n\t\"skylark-langx/skylark\",\n\t\"skylark-jquery\",\n\t\"./constants\",\n\t\"./utils\",\n\t\"./contrib/microevent\",\n\t\"./contrib/highlight\"\n\t\n],function(skylark,$,constants,utils,MicroEvent,highlight){\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : utils.debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tMicroEvent.mixin(Selectize);\n\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tutils.logError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\t$.extend(Selectize.prototype, {\n\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\tutils.watchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tutils.autoGrow($control_input);\n\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\n\t\t\tself.on('change', this.onChange);\n\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase constants.KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase constants.KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase constants.KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\t\tcase constants.KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is utils.debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\n\t\t\tif (!wasFocused) self.trigger('focus');\n\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\n\t\t\tself.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\n\t\t\tutils.debounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\n\t\t\tself.$activeOption = $option.addClass('active');\n\n\t\t\tif (scroll || !isset(scroll)) {\n\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(utils.hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && utils.hash_key(self.$activeOption.attr('data-value'));\n\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: utils.domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$dropdown_content.html(html);\n\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = utils.hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = utils.hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\n\t\t\tvalue     = utils.hash_key(value);\n\t\t\tvalue_new = utils.hash_key(data[self.settings.valueField]);\n\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\t\torder_old = self.options[value].$order;\n\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = utils.hash_key(value);\n\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = utils.hash_key(value);\n\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $();\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\n\t\t\tthis.buffer = null;\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\n\t\t\tutils.debounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = utils.hash_key(value);\n\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = utils.hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tself.lock();\n\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = utils.hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\n\t\t\tvar invalid = !this.items.length;\n\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + utils.escape_html(self.items[i]) + '\" selected=\"selected\">' + utils.escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\n\t\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = utils.getSelection(self.$control_input[0]);\n\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = utils.getSelection(self.$control_input[0]);\n\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\n\t\t\tif (direction === 0) return;\n\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.caretPos = i;\n\t\t},\n\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = utils.hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!utils.isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, utils.escape_html]));\n\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\n\t\t\treturn html[0];\n\t\t},\n\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\n\t});\n\n\treturn skylark.attach(\"intg.Selectize\",Selectize);\n});\n"]}