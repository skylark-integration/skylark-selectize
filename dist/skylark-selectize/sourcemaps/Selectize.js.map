{"version":3,"sources":["Selectize.js"],"names":["define","skylark","$","constants","utils","Sifter","MicroPlugin","MicroEvent","highlight","Selectize","$input","settings","i","n","dir","input","selectize","this","computedStyle","window","getComputedStyle","getPropertyValue","currentStyle","direction","parents","attr","extend","order","tabIndex","tagType","tagName","toLowerCase","TAG_SELECT","TAG_INPUT","rtl","test","eventNS","count","highlightedValue","isBlurring","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","options","userOptions","items","renderCache","onSearchChange","loadThrottle","debounce","sifter","diacritics","length","registerOption","registerOptionGroup","mode","maxItems","hideSelected","initializePlugins","plugins","setupCallbacks","setupTemplates","setup","mixin","prototype","$wrapper","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","self","$window","$document","document","addClass","wrapperClass","inputClass","appendTo","dropdownParent","dropdownClass","hide","dropdownContentClass","copyClassesToDropdown","css","width","style","names","join","placeholder","splitOn","delimiter","delimiterEscaped","replace","RegExp","type","on","e","stopImmediatePropagation","onOptionHover","apply","arguments","onOptionSelect","watchChildEvent","onItemSelect","autoGrow","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","blur","onBlur","focus","onFocus","paste","onPaste","IS_MAC","shiftKey","keyCode","KEY_CTRL","KEY_SHIFT","KEY_CMD","target","parentNode","has","revertSettings","$children","children","detach","tabindex","after","isArray","setValue","SUPPORTS_VALIDITY_API","preventDefault","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","disable","onChange","data","trigger","preload","field_label","labelField","field_optgroup","optgroupLabelField","templates","optgroup","html","optgroup_header","escape","option","item","option_create","render","key","fn","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","hasOwnProperty","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","setTimeout","isFull","pastedText","val","match","splitInput","trim","split","createItem","character","String","fromCharCode","which","create","KEY_TAB","KEY_A","selectAll","KEY_ESC","KEY_N","ctrlKey","altKey","KEY_DOWN","$next","getAdjacentOption","setActiveOption","KEY_P","KEY_UP","$prev","KEY_RETURN","currentTarget","KEY_LEFT","advanceSelection","KEY_RIGHT","selectOnTab","KEY_BACKSPACE","KEY_DELETE","deleteSelection","metaKey","value","refreshOptions","callback","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","createOnBlur","$target","hasClass","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","Math","max","addOption","removeClass","triggerHandler","getValue","silent","events","debounce_events","addItems","$item","eventName","idx","begin","end","swap","$last","Array","indexOf","childNodes","push","splice","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","isset","height","outerHeight","scrollTop","offset","top","stop","scrollDuration","slice","opacity","position","left","getScoreFunction","query","getSearchOptions","sort","sortField","field","fields","searchField","conjunction","searchConjunction","nesting","search","result","calculateScore","score","Error","hash_key","id","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","appendChild","lockOptgroupOrder","a","b","$order","domToString","dom","removeHighlight","tokens","regex","canCreate","prepend","addPrecedence","find","valueField","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","each","getElementWithValue","$options","index","eq","$els","getAttribute","values","buffer","isPending","control","insertBefore","firstChild","value_next","wasFull","insertAtCaret","remove","persist","caret","lock","once","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","opts","label","escape_html","removeAttr","force","visibility","display","getBoundingClientRect","$el","el","selection","option_select","$option_select","$tail","getSelection","start","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","before","append","enable","destroy","off","show","removeData","$testInput","undefined","body","templateName","cache","disabledField","clearCache","filter","createFilter","attach"],"mappings":"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","file":"../Selectize.js","sourcesContent":["define([\n\t\"skylark-langx/skylark\",\n\t\"skylark-jquery\",\n\t\"./constants\",\n\t\"./utils\",\n\t\"./Sifter\",\n\t\"./contrib/MicroPlugin\",\n\t\"./contrib/microevent\",\n\t\"./contrib/highlight\"\n\t\n],function(skylark,$,constants,utils,Sifter,MicroPlugin,MicroEvent,highlight){\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? constants.TAG_SELECT : constants.TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : utils.debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tMicroEvent.mixin(Selectize);\n\n\tMicroPlugin.mixin(Selectize);\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\t$.extend(Selectize.prototype, {\n\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === constants.TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\tutils.watchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tutils.autoGrow($control_input);\n\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[constants.IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[constants.IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === constants.KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === constants.KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === constants.KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\n\t\t\t// feature detect for the validation API\n\t\t\tif (constants.SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\n\t\t\tself.on('change', this.onChange);\n\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase constants.KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase constants.KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase constants.KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\t\tcase constants.KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(constants.IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is utils.debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\n\t\t\tif (!wasFocused) self.trigger('focus');\n\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\n\t\t\tself.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === constants.TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\n\t\t\tutils.debounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\n\t\t\tself.$activeOption = $option.addClass('active');\n\n\t\t\tif (scroll || !utils.isset(scroll)) {\n\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(utils.hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && utils.hash_key(self.$activeOption.attr('data-value'));\n\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: utils.domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$dropdown_content.html(html);\n\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = utils.hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = utils.hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\n\t\t\tvalue     = utils.hash_key(value);\n\t\t\tvalue_new = utils.hash_key(data[self.settings.valueField]);\n\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\t\torder_old = self.options[value].$order;\n\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = utils.hash_key(value);\n\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = utils.hash_key(value);\n\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $();\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\n\t\t\tthis.buffer = null;\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\n\t\t\tutils.debounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = utils.hash_key(value);\n\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = utils.hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tself.lock();\n\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\n\t\t\tvar create = utils.once(function(data) {\n\t\t\t\tself.unlock();\n\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = utils.hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\n\t\t\tvar invalid = !this.items.length;\n\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\n\t\t\tif (self.tagType === constants.TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + utils.escape_html(self.items[i]) + '\" selected=\"selected\">' + utils.escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\n\t\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = utils.getSelection(self.$control_input[0]);\n\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = utils.getSelection(self.$control_input[0]);\n\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\n\t\t\tif (direction === 0) return;\n\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.caretPos = i;\n\t\t},\n\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = utils.hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!utils.isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, utils.escape_html]));\n\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\n\t\t\treturn html[0];\n\t\t},\n\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\n\t});\n\n\treturn skylark.attach(\"intg.Selectize\",Selectize);\n});\n"]}