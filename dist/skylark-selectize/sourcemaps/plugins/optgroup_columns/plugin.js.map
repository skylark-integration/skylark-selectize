{"version":3,"sources":["plugins/optgroup_columns/plugin.js"],"names":["define","$","Selectize","constants","utils","options","original","self","this","extend","equalizeWidth","equalizeHeight","getAdjacentOption","$option","direction","$options","closest","find","index","length","eq","onKeyDown","e","$optgroup","isOpen","keyCode","KEY_LEFT","KEY_RIGHT","apply","arguments","ignoreHover","$activeOption","prev","next","Math","min","setActiveOption","getScrollbarWidth","div","width","doc","document","createElement","innerHTML","firstChild","body","appendChild","offsetWidth","clientWidth","removeChild","equalizeSizes","i","n","height_max","width_last","width_parent","$optgroups","$dropdown_content","max","height","css","innerWidth","round","hook","after"],"mappings":";;;;;;;AAAAA,QACC,iBACA,kBACA,kBACA,eACC,SAASC,EAAEC,EAAUC,EAAUC,GAiBhCF,EAAUF,OAAO,mBAAoB,SAASK,GAC7C,IAeKC,EAfDC,EAAOC,KAEXH,EAAUJ,EAAEQ,QACXC,eAAiB,EACjBC,gBAAiB,GACfN,GAEHG,KAAKI,kBAAoB,SAASC,EAASC,GAC1C,IAAIC,EAAWF,EAAQG,QAAQ,gBAAgBC,KAAK,qBAChDC,EAAWH,EAASG,MAAML,GAAWC,EAEzC,OAAOI,GAAS,GAAKA,EAAQH,EAASI,OAASJ,EAASK,GAAGF,GAASjB,KAGrEO,KAAKa,WACAf,EAAWC,EAAKc,UACb,SAASC,GACf,IAAIJ,EAAOL,EAASE,EAAUQ,EAE9B,OAAIf,KAAKgB,QAAWF,EAAEG,UAAYtB,EAAUuB,UAAYJ,EAAEG,UAAYtB,EAAUwB,UAmBzErB,EAASsB,MAAMpB,KAAMqB,YAlB3BtB,EAAKuB,aAAc,EAEnBZ,GADAK,EAAYf,KAAKuB,cAAcf,QAAQ,iBACrBC,KAAK,qBAAqBC,MAAMV,KAAKuB,qBASvDlB,GADAE,GALCQ,EADED,EAAEG,UAAYC,SACJH,EAAUS,KAAK,gBAEfT,EAAUU,KAAK,iBAGPhB,KAAK,sBACNG,GAAGc,KAAKC,IAAIpB,EAASI,OAAS,EAAGD,KACzCC,QACXX,KAAK4B,gBAAgBvB,OASzB,IAAIwB,EAAoB,WACvB,IAAIC,EACAC,EAAQF,EAAkBE,MAC1BC,EAAMC,SAUV,YARqB,IAAVF,KACVD,EAAME,EAAIE,cAAc,QACpBC,UAAY,8IAChBL,EAAMA,EAAIM,WACVJ,EAAIK,KAAKC,YAAYR,GACrBC,EAAQF,EAAkBE,MAAQD,EAAIS,YAAcT,EAAIU,YACxDR,EAAIK,KAAKI,YAAYX,IAEfC,GAGJW,EAAgB,WACnB,IAAIC,EAAGC,EAAGC,EAAYd,EAAOe,EAAYC,EAAcC,EAIvD,IADAJ,GADAI,EAAavD,EAAE,eAAgBM,EAAKkD,oBACrBtC,SACJZ,EAAKkD,kBAAkBlB,QAAlC,CAEA,GAAIlC,EAAQM,eAAgB,CAE3B,IADA0C,EAAa,EACRF,EAAI,EAAGA,EAAIC,EAAGD,IAClBE,EAAanB,KAAKwB,IAAIL,EAAYG,EAAWpC,GAAG+B,GAAGQ,UAEpDH,EAAWI,KAAKD,OAAQN,IAGrBhD,EAAQK,gBACX6C,EAAehD,EAAKkD,kBAAkBI,aAAexB,IACrDE,EAAQL,KAAK4B,MAAMP,EAAeH,GAClCI,EAAWI,KAAKrB,MAAOA,IACnBa,EAAI,IACPE,EAAaC,EAAehB,GAASa,EAAI,GACzCI,EAAWpC,GAAGgC,EAAI,GAAGQ,KAAKrB,MAAOe,SAKhCjD,EAAQM,gBAAkBN,EAAQK,iBACrCN,EAAM2D,KAAKC,MAAMxD,KAAM,mBAAoB0C,GAC3C9C,EAAM2D,KAAKC,MAAMxD,KAAM,iBAAkB0C","file":"../../../plugins/optgroup_columns/plugin.js","sourcesContent":["define([\n\t\"skylark-jquery\",\n\t\"../../Selectize\",\n\t\"../../constants\",\n\t\"../../utils\"\n],function($,Selectize,constants,utils) {\n\t/**\n\t * Plugin: \"optgroup_columns\" (selectize.js)\n\t * Copyright (c) 2013 Simon Hewitt & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Simon Hewitt <si@sjhewitt.co.uk>\n\t */\n\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\n\t\t\t\tif (this.isOpen && (e.keyCode === constants.KEY_LEFT || e.keyCode === constants.KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\tutils.hook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\tutils.hook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\n\n\t});\n});"]}