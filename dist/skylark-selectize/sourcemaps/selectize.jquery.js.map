{"version":3,"sources":["selectize.jquery.js"],"names":["define","$","Selectize","constants","defaults","utils","fn","selectize","settings_user","settings","extend","attr_data","dataAttr","field_label","labelField","field_value","valueField","field_disabled","disabledField","field_optgroup","optgroupField","field_optgroup_label","optgroupLabelField","field_optgroup_value","optgroupValueField","this","each","$input","tag_name","tagName","toLowerCase","placeholder","attr","allowEmptyOption","children","text","settings_element","options","optgroups","items","i","n","$children","optionsMap","readData","$el","data","length","JSON","parse","addOption","$option","group","value","hash_key","val","hasOwnProperty","arr","isArray","push","option","prop","is","addGroup","$optgroup","id","optgroup","$options","maxItems","init_select","values","data_raw","trim","split","delimiter","init_textbox","support","validity","SUPPORTS_VALIDITY_API"],"mappings":"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","file":"../selectize.jquery.js","sourcesContent":["define([\n\t\"skylark-jquery\",\n\t\"./Selectize\",\n\t\"./constants\",\n\t\"./defaults\",\n\t\"./utils\"\n],function($,Selectize,constants,defaults,utils) {\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\n\t\t\tvar data_raw = $input.attr(attr_data);\n\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\n\t\t\t\tvar value = utils.hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: constants.SUPPORTS_VALIDITY_API\n\t};\n\n\treturn $;\n});"]}