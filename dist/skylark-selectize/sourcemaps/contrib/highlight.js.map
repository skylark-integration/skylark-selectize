{"version":3,"sources":["contrib/highlight.js"],"names":["define","$","fn","removeHighlight","this","find","each","parentNode","firstChild","nodeName","parent","replaceChild","normalize","end","$element","pattern","length","regex","RegExp","highlight","node","skip","nodeType","pos","data","search","match","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","childNodes","test","tagName","i"],"mappings":";;;;;;;AAAAA,QACC,kBACC,SAASC,GA2DV,OATAA,EAAEC,GAAGC,gBAAkB,WACtB,OAAOC,KAAKC,KAAK,kBAAkBC,KAAK,WACvCF,KAAKG,WAAWC,WAAWC,SAC3B,IAAIC,EAASN,KAAKG,WAClBG,EAAOC,aAAaP,KAAKI,WAAYJ,MACrCM,EAAOE,cACLC,OA/CY,SAASC,EAAUC,GAClC,GAAuB,iBAAZA,GAAyBA,EAAQC,OAA5C,CACA,IAAIC,EAA4B,iBAAZF,EAAwB,IAAIG,OAAOH,EAAS,KAAOA,EAEnEI,EAAY,SAASC,GACxB,IAAIC,EAAO,EAGX,GAAsB,IAAlBD,EAAKE,SAAgB,CACxB,IAAIC,EAAMH,EAAKI,KAAKC,OAAOR,GAC3B,GAAIM,GAAO,GAAKH,EAAKI,KAAKR,OAAS,EAAG,CACrC,IAAIU,EAAQN,EAAKI,KAAKE,MAAMT,GACxBU,EAAWC,SAASC,cAAc,QACtCF,EAASG,UAAY,YACrB,IAAIC,EAAYX,EAAKY,UAAUT,GAE3BU,GADSF,EAAUC,UAAUN,EAAM,GAAGV,QACxBe,EAAUG,WAAU,IACtCP,EAASQ,YAAYF,GACrBF,EAAUxB,WAAWI,aAAagB,EAAUI,GAC5CV,EAAO,QAKJ,GAAsB,IAAlBD,EAAKE,UAAkBF,EAAKgB,aAAe,kBAAkBC,KAAKjB,EAAKkB,WAAiC,cAAnBlB,EAAKU,WAA8C,SAAjBV,EAAKkB,SACpI,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAKgB,WAAWpB,SAAUuB,EAC7CA,GAAKpB,EAAUC,EAAKgB,WAAWG,IAGjC,OAAOlB,GAGR,OAAOP,EAASR,KAAK,WACpBa,EAAUf","file":"../../contrib/highlight.js","sourcesContent":["define([\n\t\"skylark-jquery\"\n],function($) {\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\n\treturn highlight;\n});\n"]}