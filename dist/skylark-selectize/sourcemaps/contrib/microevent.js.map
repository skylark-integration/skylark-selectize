{"version":3,"sources":["contrib/microevent.js"],"names":["define","MicroEvent","prototype","on","event","fct","this","_events","push","off","n","arguments","length","splice","indexOf","trigger","i","apply","Array","slice","call","mixin","destObject","props"],"mappings":";;;;;;;AAAAA,UAAU,WAWT,IAAIC,EAAa,aAuCjB,OAtCAA,EAAWC,WACVC,GAAI,SAASC,EAAOC,GACnBC,KAAKC,QAAUD,KAAKC,YACpBD,KAAKC,QAAQH,GAASE,KAAKC,QAAQH,OACnCE,KAAKC,QAAQH,GAAOI,KAAKH,IAE1BI,IAAK,SAASL,EAAOC,GACpB,IAAIK,EAAIC,UAAUC,OAClB,OAAU,IAANF,SAAuBJ,KAAKC,QACtB,IAANG,SAAuBJ,KAAKC,QAAQH,IAExCE,KAAKC,QAAUD,KAAKC,iBAChBH,KAASE,KAAKC,UAAY,GAC9BD,KAAKC,QAAQH,GAAOS,OAAOP,KAAKC,QAAQH,GAAOU,QAAQT,GAAM,MAE9DU,QAAS,SAASX,GAEjB,GADAE,KAAKC,QAAUD,KAAKC,YAChBH,KAASE,KAAKC,UAAY,EAC9B,IAAK,IAAIS,EAAI,EAAGA,EAAIV,KAAKC,QAAQH,GAAOQ,OAAQI,IAC/CV,KAAKC,QAAQH,GAAOY,GAAGC,MAAMX,KAAMY,MAAMhB,UAAUiB,MAAMC,KAAKT,UAAW,MAY5EV,EAAWoB,MAAQ,SAASC,GAE3B,IADA,IAAIC,GAAS,KAAM,MAAO,WACjBP,EAAI,EAAGA,EAAIO,EAAMX,OAAQI,IACjCM,EAAWpB,UAAUqB,EAAMP,IAAMf,EAAWC,UAAUqB,EAAMP,KAIvDf","file":"../../contrib/microevent.js","sourcesContent":["define([],function() {\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\n\treturn MicroEvent;\n});"]}