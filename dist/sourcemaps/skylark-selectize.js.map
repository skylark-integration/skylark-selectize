{"version":3,"sources":["skylark-selectize.js"],"names":["define","IS_MAC","test","navigator","userAgent","KEY_CMD","KEY_CTRL","SUPPORTS_VALIDITY_API","window","document","createElement","validity","KEY_A","KEY_COMMA","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_P","KEY_RIGHT","KEY_DOWN","KEY_N","KEY_BACKSPACE","KEY_DELETE","KEY_SHIFT","KEY_TAB","TAG_SELECT","TAG_INPUT","$","constants","$testInput","hook","before","self","method","fn","original","apply","arguments","after","result","getSelection","input","start","selectionStart","length","selectionEnd","selection","focus","sel","createRange","selLen","text","moveStart","value","transferStyles","$from","$to","properties","i","n","styles","css","measureString","str","$parent","position","top","left","width","padding","whiteSpace","appendTo","isset","object","hash_key","escape_html","replace","escape_replace","once","called","this","debounce","delay","timeout","args","clearTimeout","setTimeout","debounce_events","types","type","trigger","event_args","indexOf","hasOwnProperty","watchChildEvent","event","selector","on","e","child","target","parentNode","currentTarget","autoGrow","$input","currentWidth","update","options","keyCode","printable","placeholder","shift","character","metaKey","altKey","force","data","val","toLowerCase","substring","shiftKey","String","fromCharCode","toUpperCase","attr","triggerHandler","domToString","d","tmp","appendChild","cloneNode","innerHTML","logError","message","console","error","component","explanation","group","groupEnd","langx","cmp","a","b","asciifold","getattr","obj","name","nesting","names","split","DIACRITICS","c","f","g","h","j","k","l","o","p","q","r","s","t","u","v","w","x","y","z","chunk","foreignletters","lookup","charAt","regexp","RegExp","foreignletter","Sifter","items","settings","diacritics","prototype","tokenize","query","trim","regex","letter","tokens","words","push","string","iterator","callback","isArray","Array","forEach","key","getScoreFunction","search","fields","token_count","prepareSearch","field_count","scoreValue","token","score","pos","scoreObject","sum","conjunction","getSortFunction","field","fields_count","multiplier","multipliers","get_field","implicit_score","sort","sort_empty","id","unshift","direction","splice","option_fields","extend","option_sort","option_sort_empty","total","fn_sort","fn_score","item","filter","limit","slice","MicroPlugin","mixin","Interface","plugins","initializePlugins","queue","requested","loaded","require","loadPlugin","plugin","Error","MicroEvent","fct","_events","off","call","destObject","props","removeHighlight","find","each","firstChild","nodeName","parent","replaceChild","normalize","end","$element","pattern","highlight","node","skip","nodeType","match","spannode","className","middlebit","splitText","middleclone","childNodes","tagName","skylark","utils","Selectize","dir","selectize","computedStyle","getComputedStyle","getPropertyValue","currentStyle","parents","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isBlurring","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","renderCache","onSearchChange","loadThrottle","sifter","registerOption","registerOptionGroup","mode","maxItems","hideSelected","setupCallbacks","setupTemplates","setup","$wrapper","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","$window","$document","addClass","wrapperClass","inputClass","dropdownParent","dropdownClass","hide","dropdownContentClass","copyClassesToDropdown","style","join","splitOn","delimiter","delimiterEscaped","stopImmediatePropagation","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","blur","onBlur","onFocus","paste","onPaste","has","revertSettings","$children","children","detach","tabindex","setValue","preventDefault","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","disable","onChange","preload","field_label","labelField","field_optgroup","optgroupLabelField","templates","optgroup","html","optgroup_header","escape","option","option_create","render","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","pastedText","splitInput","createItem","which","create","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","refreshOptions","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","createOnBlur","$target","hasClass","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","Math","max","addOption","removeClass","changed","getValue","silent","events","addItems","$item","eventName","idx","begin","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","scroll_top","scroll_bottom","height","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getSearchOptions","sortField","searchField","searchConjunction","calculateScore","triggerDropdown","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","lockOptgroupOrder","a_order","$order","b_order","dom","canCreate","prepend","addPrecedence","valueField","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","getElementWithValue","$options","index","eq","$els","getAttribute","values","buffer","isPending","control","insertBefore","value_next","wasFull","insertAtCaret","remove","persist","caret","lock","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","opts","label","removeAttr","visibility","display","getBoundingClientRect","$el","el","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","append","enable","destroy","show","removeData","undefined","body","templateName","cache","disabledField","clearCache","createFilter","attach","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_disabled","field_optgroup_label","field_optgroup_value","tag_name","settings_element","optionsMap","readData","JSON","parse","arr","addGroup","$optgroup","init_select","data_raw","init_textbox","support","sortable","forcePlaceholderSize","disabled","ui","helper","overflow","active","title","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","closest","prev","next","getScrollbarWidth","div","doc","offsetWidth","clientWidth","removeChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","innerWidth","round","thisRef","render_item","html_container","html_element","multiClose","context","singleClose","main"],"mappings":"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","file":"../skylark-selectize.js","sourcesContent":["define('skylark-selectize/constants',[],function() {\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\n\treturn {\n\t\tIS_MAC,\n\t\tKEY_A,\n\t\tKEY_COMMA,\n\t\tKEY_RETURN,\n\t\tKEY_ESC,\n\t\tKEY_LEFT,\n\t\tKEY_UP,\n\t\tKEY_P,\n\t\tKEY_RIGHT,\n\t\tKEY_DOWN,\n\t\tKEY_N,\n\t\tKEY_BACKSPACE,\n\t\tKEY_DELETE,\n\t\tKEY_SHIFT,\n\t\tKEY_CMD,\n\t\tKEY_CTRL,\n\t\tKEY_TAB,\n\t\tTAG_SELECT,\n\t\tTAG_INPUT,\n\t\tSUPPORTS_VALIDITY_API\n\t};\n});\ndefine('skylark-selectize/utils',[\n\t\"skylark-jquery\",\n\t\"./constants\"\t\n],function($,constants) {\n\t/**\n\t * Determines if the provided value has been defined.\n\t *\n\t * @param {mixed} object\n\t * @returns {boolean}\n\t */\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\n\tvar hook = {};\n\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\n\tvar $testInput;\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (!$testInput) {\n\t\t\t$testInput = $('<span />').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).appendTo('body');\n\t\t}\n\n\t\t$testInput.text(str);\n\n\t\ttransferStyles($parent, $testInput, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\n\t\treturn $testInput.width();\n\t};\n\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)   || // a-z\n\t\t\t\t\t(keyCode >= 96 && keyCode <= 111)  || // numpad 0-9, numeric operators\n\t\t\t\t\t(keyCode >= 186 && keyCode <= 222) || // semicolon, equal, comma, dash, etc.\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\n\t\t\t\tif (keyCode === constants.KEY_DELETE || keyCode === constants.KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === constants.KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === constants.KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\n\t\ttmp.appendChild(d.cloneNode(true));\n\n\t\treturn tmp.innerHTML;\n\t};\n\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\n\t\tconsole.error(component + \": \" + message)\n\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t};\n\n\treturn {\n\t\tisset,\n\t\thash_key,\n\t\tescape_html,\n\t\tescape_replace,\n\t\thook,\n\t\tonce,\n\t\tdebounce,\n\t\tdebounce_events,\n\t\twatchChildEvent,\n\t\tgetSelection,\n\t\ttransferStyles,\n\t\tmeasureString,\n\t\tautoGrow,\n\t\tdomToString,\n\t\tlogError\n\t};\n});\n\ndefine('skylark-selectize/Sifter',[\r\n\t\"skylark-langx/langx\"\r\n],function(langx){\r\n\r\n\tvar escape_regex = function(str) {\r\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n\t};\r\n\r\n\tvar cmp = function(a, b) {\r\n\t\tif (typeof a === 'number' && typeof b === 'number') {\r\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\r\n\t\t}\r\n\t\ta = asciifold(String(a || ''));\r\n\t\tb = asciifold(String(b || ''));\r\n\t\tif (a > b) return 1;\r\n\t\tif (b > a) return -1;\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t/**\r\n\t * A property getter resolving dot-notation\r\n\t * @param  {Object}  obj     The root object to fetch property on\r\n\t * @param  {String}  name    The optionally dotted property name to fetch\r\n\t * @param  {Boolean} nesting Handle nesting or not\r\n\t * @return {Object}          The resolved property value\r\n\t */\r\n\tvar getattr = function(obj, name, nesting) {\r\n\t    if (!obj || !name) return;\r\n\t    if (!nesting) return obj[name];\r\n\t    var names = name.split(\".\");\r\n\t    while(names.length && (obj = obj[names.shift()]));\r\n\t    return obj;\r\n\t};\r\n\r\n\tvar DIACRITICS = {\r\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\r\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\r\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\r\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\r\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\r\n\t\t'f': '[fƑƒḞḟ]',\r\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\r\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\r\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\r\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\r\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\r\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\r\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\r\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\r\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\r\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\r\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\r\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\r\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\r\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\r\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\r\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\r\n\t\t'x': '[xẌẍẊẋχ]',\r\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\r\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\r\n\t};\r\n\r\n\tvar asciifold = (function() {\r\n\t\tvar i, n, k, chunk;\r\n\t\tvar foreignletters = '';\r\n\t\tvar lookup = {};\r\n\t\tfor (k in DIACRITICS) {\r\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\r\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\r\n\t\t\t\tforeignletters += chunk;\r\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\r\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\r\n\t\treturn function(str) {\r\n\t\t\treturn str.replace(regexp, function(foreignletter) {\r\n\t\t\t\treturn lookup[foreignletter];\r\n\t\t\t}).toLowerCase();\r\n\t\t};\r\n\t})();\r\n\r\n\t/**\r\n\t * Textually searches arrays and hashes of objects\r\n\t * by property (or multiple properties). Designed\r\n\t * specifically for autocomplete.\r\n\t *\r\n\t * @constructor\r\n\t * @param {array|object} items\r\n\t * @param {object} items\r\n\t */\r\n\tvar Sifter = function(items, settings) {\r\n\t\tthis.items = items;\r\n\t\tthis.settings = settings || {diacritics: true};\r\n\t};\r\n\r\n\t/**\r\n\t * Splits a search string into an array of individual\r\n\t * regexps to be used to match results.\r\n\t *\r\n\t * @param {string} query\r\n\t * @returns {array}\r\n\t */\r\n\tSifter.prototype.tokenize = function(query) {\r\n\t\tquery = langx.trim(String(query || '').toLowerCase());\r\n\t\tif (!query || !query.length) return [];\r\n\r\n\t\tvar i, n, regex, letter;\r\n\t\tvar tokens = [];\r\n\t\tvar words = query.split(/ +/);\r\n\r\n\t\tfor (i = 0, n = words.length; i < n; i++) {\r\n\t\t\tregex = escape_regex(words[i]);\r\n\t\t\tif (this.settings.diacritics) {\r\n\t\t\t\tfor (letter in DIACRITICS) {\r\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\r\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttokens.push({\r\n\t\t\t\tstring : words[i],\r\n\t\t\t\tregex  : new RegExp(regex, 'i')\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn tokens;\r\n\t};\r\n\r\n\t/**\r\n\t * Iterates over arrays and hashes.\r\n\t *\r\n\t * ```\r\n\t * this.iterator(this.items, function(item, id) {\r\n\t *    // invoked for each item\r\n\t * });\r\n\t * ```\r\n\t *\r\n\t * @param {array|object} object\r\n\t */\r\n\tSifter.prototype.iterator = function(object, callback) {\r\n\t\tvar iterator;\r\n\t\tif (langx.isArray(object)) {\r\n\t\t\titerator = Array.prototype.forEach || function(callback) {\r\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\r\n\t\t\t\t\tcallback(this[i], i, this);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\titerator = function(callback) {\r\n\t\t\t\tfor (var key in this) {\r\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tcallback(this[key], key, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\titerator.apply(object, [callback]);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a function to be used to score individual results.\r\n\t *\r\n\t * Good matches will have a higher score than poor matches.\r\n\t * If an item is not a match, 0 will be returned by the function.\r\n\t *\r\n\t * @param {object|string} search\r\n\t * @param {object} options (optional)\r\n\t * @returns {function}\r\n\t */\r\n\tSifter.prototype.getScoreFunction = function(search, options) {\r\n\t\tvar self, fields, tokens, token_count, nesting;\r\n\r\n\t\tself        = this;\r\n\t\tsearch      = self.prepareSearch(search, options);\r\n\t\ttokens      = search.tokens;\r\n\t\tfields      = search.options.fields;\r\n\t\ttoken_count = tokens.length;\r\n\t\tnesting     = search.options.nesting;\r\n\r\n\t\t/**\r\n\t\t * Calculates how close of a match the\r\n\t\t * given value is against a search token.\r\n\t\t *\r\n\t\t * @param {mixed} value\r\n\t\t * @param {object} token\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\tvar scoreValue = function(value, token) {\r\n\t\t\tvar score, pos;\r\n\r\n\t\t\tif (!value) return 0;\r\n\t\t\tvalue = String(value || '');\r\n\t\t\tpos = value.search(token.regex);\r\n\t\t\tif (pos === -1) return 0;\r\n\t\t\tscore = token.string.length / value.length;\r\n\t\t\tif (pos === 0) score += 0.5;\r\n\t\t\treturn score;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Calculates the score of an object\r\n\t\t * against the search query.\r\n\t\t *\r\n\t\t * @param {object} token\r\n\t\t * @param {object} data\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\tvar scoreObject = (function() {\r\n\t\t\tvar field_count = fields.length;\r\n\t\t\tif (!field_count) {\r\n\t\t\t\treturn function() { return 0; };\r\n\t\t\t}\r\n\t\t\tif (field_count === 1) {\r\n\t\t\t\treturn function(token, data) {\r\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn function(token, data) {\r\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\r\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\r\n\t\t\t\t}\r\n\t\t\t\treturn sum / field_count;\r\n\t\t\t};\r\n\t\t})();\r\n\r\n\t\tif (!token_count) {\r\n\t\t\treturn function() { return 0; };\r\n\t\t}\r\n\t\tif (token_count === 1) {\r\n\t\t\treturn function(data) {\r\n\t\t\t\treturn scoreObject(tokens[0], data);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (search.options.conjunction === 'and') {\r\n\t\t\treturn function(data) {\r\n\t\t\t\tvar score;\r\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\r\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\r\n\t\t\t\t\tif (score <= 0) return 0;\r\n\t\t\t\t\tsum += score;\r\n\t\t\t\t}\r\n\t\t\t\treturn sum / token_count;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn function(data) {\r\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\r\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\r\n\t\t\t\t}\r\n\t\t\t\treturn sum / token_count;\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a function that can be used to compare two\r\n\t * results, for sorting purposes. If no sorting should\r\n\t * be performed, `null` will be returned.\r\n\t *\r\n\t * @param {string|object} search\r\n\t * @param {object} options\r\n\t * @return function(a,b)\r\n\t */\r\n\tSifter.prototype.getSortFunction = function(search, options) {\r\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\r\n\r\n\t\tself   = this;\r\n\t\tsearch = self.prepareSearch(search, options);\r\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\r\n\r\n\t\t/**\r\n\t\t * Fetches the specified sort field value\r\n\t\t * from a search result item.\r\n\t\t *\r\n\t\t * @param  {string} name\r\n\t\t * @param  {object} result\r\n\t\t * @return {mixed}\r\n\t\t */\r\n\t\tget_field = function(name, result) {\r\n\t\t\tif (name === '$score') return result.score;\r\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\r\n\t\t};\r\n\r\n\t\t// parse options\r\n\t\tfields = [];\r\n\t\tif (sort) {\r\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\r\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\r\n\t\t\t\t\tfields.push(sort[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// the \"$score\" field is implied to be the primary\r\n\t\t// sort field, unless it's manually specified\r\n\t\tif (search.query) {\r\n\t\t\timplicit_score = true;\r\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\r\n\t\t\t\tif (fields[i].field === '$score') {\r\n\t\t\t\t\timplicit_score = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (implicit_score) {\r\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\r\n\t\t\t\tif (fields[i].field === '$score') {\r\n\t\t\t\t\tfields.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmultipliers = [];\r\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\r\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\r\n\t\t}\r\n\r\n\t\t// build function\r\n\t\tfields_count = fields.length;\r\n\t\tif (!fields_count) {\r\n\t\t\treturn null;\r\n\t\t} else if (fields_count === 1) {\r\n\t\t\tfield = fields[0].field;\r\n\t\t\tmultiplier = multipliers[0];\r\n\t\t\treturn function(a, b) {\r\n\t\t\t\treturn multiplier * cmp(\r\n\t\t\t\t\tget_field(field, a),\r\n\t\t\t\t\tget_field(field, b)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn function(a, b) {\r\n\t\t\t\tvar i, result, a_value, b_value, field;\r\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\r\n\t\t\t\t\tfield = fields[i].field;\r\n\t\t\t\t\tresult = multipliers[i] * cmp(\r\n\t\t\t\t\t\tget_field(field, a),\r\n\t\t\t\t\t\tget_field(field, b)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (result) return result;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Parses a search query and returns an object\r\n\t * with tokens and fields ready to be populated\r\n\t * with results.\r\n\t *\r\n\t * @param {string} query\r\n\t * @param {object} options\r\n\t * @returns {object}\r\n\t */\r\n\tSifter.prototype.prepareSearch = function(query, options) {\r\n\t\tif (typeof query === 'object') return query;\r\n\r\n\t\toptions = langx.extend({}, options);\r\n\r\n\t\tvar option_fields     = options.fields;\r\n\t\tvar option_sort       = options.sort;\r\n\t\tvar option_sort_empty = options.sort_empty;\r\n\r\n\t\tif (option_fields && !langx.isArray(option_fields)) options.fields = [option_fields];\r\n\t\tif (option_sort && !langx.isArray(option_sort)) options.sort = [option_sort];\r\n\t\tif (option_sort_empty && !langx.isArray(option_sort_empty)) options.sort_empty = [option_sort_empty];\r\n\r\n\t\treturn {\r\n\t\t\toptions : options,\r\n\t\t\tquery   : String(query || '').toLowerCase(),\r\n\t\t\ttokens  : this.tokenize(query),\r\n\t\t\ttotal   : 0,\r\n\t\t\titems   : []\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Searches through all items and returns a sorted array of matches.\r\n\t *\r\n\t * The `options` parameter can contain:\r\n\t *\r\n\t *   - fields {string|array}\r\n\t *   - sort {array}\r\n\t *   - score {function}\r\n\t *   - filter {bool}\r\n\t *   - limit {integer}\r\n\t *\r\n\t * Returns an object containing:\r\n\t *\r\n\t *   - options {object}\r\n\t *   - query {string}\r\n\t *   - tokens {array}\r\n\t *   - total {int}\r\n\t *   - items {array}\r\n\t *\r\n\t * @param {string} query\r\n\t * @param {object} options\r\n\t * @returns {object}\r\n\t */\r\n\tSifter.prototype.search = function(query, options) {\r\n\t\tvar self = this, value, score, search, calculateScore;\r\n\t\tvar fn_sort;\r\n\t\tvar fn_score;\r\n\r\n\t\tsearch  = this.prepareSearch(query, options);\r\n\t\toptions = search.options;\r\n\t\tquery   = search.query;\r\n\r\n\t\t// generate result scoring function\r\n\t\tfn_score = options.score || self.getScoreFunction(search);\r\n\r\n\t\t// perform search and sort\r\n\t\tif (query.length) {\r\n\t\t\tself.iterator(self.items, function(item, id) {\r\n\t\t\t\tscore = fn_score(item);\r\n\t\t\t\tif (options.filter === false || score > 0) {\r\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tself.iterator(self.items, function(item, id) {\r\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfn_sort = self.getSortFunction(search, options);\r\n\t\tif (fn_sort) search.items.sort(fn_sort);\r\n\r\n\t\t// apply limits\r\n\t\tsearch.total = search.items.length;\r\n\t\tif (typeof options.limit === 'number') {\r\n\t\t\tsearch.items = search.items.slice(0, options.limit);\r\n\t\t}\r\n\r\n\t\treturn search;\r\n\t};\r\n\t\r\n\treturn Sifter;\r\n});\ndefine('skylark-selectize/contrib/MicroPlugin',[],function(){\r\n\tvar MicroPlugin = {};\r\n\r\n\tMicroPlugin.mixin = function(Interface) {\r\n\t\tInterface.plugins = {};\r\n\r\n\t\t/**\r\n\t\t * Initializes the listed plugins (with options).\r\n\t\t * Acceptable formats:\r\n\t\t *\r\n\t\t * List (without options):\r\n\t\t *   ['a', 'b', 'c']\r\n\t\t *\r\n\t\t * List (with options):\r\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\r\n\t\t *\r\n\t\t * Hash (with options):\r\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\r\n\t\t *\r\n\t\t * @param {mixed} plugins\r\n\t\t */\r\n\t\tInterface.prototype.initializePlugins = function(plugins) {\r\n\t\t\tvar i, n, key;\r\n\t\t\tvar self  = this;\r\n\t\t\tvar queue = [];\r\n\r\n\t\t\tself.plugins = {\r\n\t\t\t\tnames     : [],\r\n\t\t\t\tsettings  : {},\r\n\t\t\t\trequested : {},\r\n\t\t\t\tloaded    : {}\r\n\t\t\t};\r\n\r\n\t\t\tif (Array.isArray(plugins)) {\r\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\r\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\r\n\t\t\t\t\t\tqueue.push(plugins[i]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\r\n\t\t\t\t\t\tqueue.push(plugins[i].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (plugins) {\r\n\t\t\t\tfor (key in plugins) {\r\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\r\n\t\t\t\t\t\tqueue.push(key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile (queue.length) {\r\n\t\t\t\tself.require(queue.shift());\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tInterface.prototype.loadPlugin = function(name) {\r\n\t\t\tvar self    = this;\r\n\t\t\tvar plugins = self.plugins;\r\n\t\t\tvar plugin  = Interface.plugins[name];\r\n\r\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\r\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\r\n\t\t\t}\r\n\r\n\t\t\tplugins.requested[name] = true;\r\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\r\n\t\t\tplugins.names.push(name);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initializes a plugin.\r\n\t\t *\r\n\t\t * @param {string} name\r\n\t\t */\r\n\t\tInterface.prototype.require = function(name) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar plugins = self.plugins;\r\n\r\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\r\n\t\t\t\tif (plugins.requested[name]) {\r\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\r\n\t\t\t\t}\r\n\t\t\t\tself.loadPlugin(name);\r\n\t\t\t}\r\n\r\n\t\t\treturn plugins.loaded[name];\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Registers a plugin.\r\n\t\t *\r\n\t\t * @param {string} name\r\n\t\t * @param {function} fn\r\n\t\t */\r\n\t\tInterface.define = function(name, fn) {\r\n\t\t\tInterface.plugins[name] = {\r\n\t\t\t\t'name' : name,\r\n\t\t\t\t'fn'   : fn\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\r\n\r\n\treturn MicroPlugin;\r\n\t\r\n});\ndefine('skylark-selectize/contrib/microevent',[],function() {\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\n\treturn MicroEvent;\n});\ndefine('skylark-selectize/contrib/highlight',[\n\t\"skylark-jquery\"\n],function($) {\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\n\treturn highlight;\n});\n\ndefine('skylark-selectize/Selectize',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-jquery\",\n\t\"./constants\",\n\t\"./utils\",\n\t\"./Sifter\",\n\t\"./contrib/MicroPlugin\",\n\t\"./contrib/microevent\",\n\t\"./contrib/highlight\"\n\t\n],function(skylark,$,constants,utils,Sifter,MicroPlugin,MicroEvent,highlight){\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? constants.TAG_SELECT : constants.TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : utils.debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tMicroEvent.mixin(Selectize);\n\n\tMicroPlugin.mixin(Selectize);\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\t$.extend(Selectize.prototype, {\n\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === constants.TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\tutils.watchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tutils.autoGrow($control_input);\n\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[constants.IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[constants.IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === constants.KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === constants.KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === constants.KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\n\t\t\t// feature detect for the validation API\n\t\t\tif (constants.SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\n\t\t\tself.on('change', this.onChange);\n\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase constants.KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase constants.KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase constants.KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\t\tcase constants.KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(constants.IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is utils.debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\n\t\t\tif (!wasFocused) self.trigger('focus');\n\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\n\t\t\tself.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === constants.TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\n\t\t\tutils.debounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\n\t\t\tself.$activeOption = $option.addClass('active');\n\n\t\t\tif (scroll || !utils.isset(scroll)) {\n\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(utils.hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && utils.hash_key(self.$activeOption.attr('data-value'));\n\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: utils.domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$dropdown_content.html(html);\n\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = utils.hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = utils.hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\n\t\t\tvalue     = utils.hash_key(value);\n\t\t\tvalue_new = utils.hash_key(data[self.settings.valueField]);\n\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\t\torder_old = self.options[value].$order;\n\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = utils.hash_key(value);\n\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = utils.hash_key(value);\n\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $();\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\n\t\t\tthis.buffer = null;\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\n\t\t\tutils.debounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = utils.hash_key(value);\n\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = utils.hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tself.lock();\n\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\n\t\t\tvar create = utils.once(function(data) {\n\t\t\t\tself.unlock();\n\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = utils.hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\n\t\t\tvar invalid = !this.items.length;\n\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\n\t\t\tif (self.tagType === constants.TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + utils.escape_html(self.items[i]) + '\" selected=\"selected\">' + utils.escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\n\t\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = utils.getSelection(self.$control_input[0]);\n\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = utils.getSelection(self.$control_input[0]);\n\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\n\t\t\tif (direction === 0) return;\n\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.caretPos = i;\n\t\t},\n\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = utils.hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!utils.isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, utils.escape_html]));\n\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\n\t\t\treturn html[0];\n\t\t},\n\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\n\t});\n\n\treturn skylark.attach(\"intg.Selectize\",Selectize);\n});\n\ndefine('skylark-selectize/defaults',[\n\t\"./Selectize\"\n],function(Selectize) {\n\tSelectize.count = 0;\n\t\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\tdisabledField: 'disabled',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\n\t\tdropdownParent: null,\n\n\t\tcopyClassesToDropdown: true,\n\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\n});\n\ndefine('skylark-selectize/selectize.jquery',[\n\t\"skylark-jquery\",\n\t\"./Selectize\",\n\t\"./constants\",\n\t\"./defaults\",\n\t\"./utils\"\n],function($,Selectize,constants,defaults,utils) {\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\n\t\t\tvar data_raw = $input.attr(attr_data);\n\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\n\t\t\t\tvar value = utils.hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: constants.SUPPORTS_VALIDITY_API\n\t};\n\n\treturn $;\n});\ndefine('skylark-selectize/plugins/drag_drop/plugin',[\n\t\"skylark-jquery\",\n\t\"../../Selectize\"\n],function($,Selectize) {\n\t/**\n\t * Plugin: \"drag_drop\" (selectize.js)\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\n\t});\n});\ndefine('skylark-selectize/plugins/dropdown_header/plugin',[\n\t\"skylark-jquery\",\n\t\"../../Selectize\"\n],function($,Selectize) {\n\t/**\n\t * Plugin: \"dropdown_header\" (selectize.js)\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\n\t});\n});\ndefine('skylark-selectize/plugins/optgroup_columns/plugin',[\n\t\"skylark-jquery\",\n\t\"../../Selectize\",\n\t\"../../constants\",\n\t\"../../utils\"\n],function($,Selectize,constants,utils) {\n\t/**\n\t * Plugin: \"optgroup_columns\" (selectize.js)\n\t * Copyright (c) 2013 Simon Hewitt & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Simon Hewitt <si@sjhewitt.co.uk>\n\t */\n\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\n\t\t\t\tif (this.isOpen && (e.keyCode === constants.KEY_LEFT || e.keyCode === constants.KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\tutils.hook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\tutils.hook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\n\n\t});\n});\ndefine('skylark-selectize/plugins/remove_button/plugin',[\n\t\"../../Selectize\",\n\t\"../../utils\"\n],function(Selectize,utils) {\n\t/**\n\t * Plugin: \"remove_button\" (selectize.js)\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\n\t\t\tvar singleClose = function(thisRef, options) {\n\n\t\t\t\toptions.className = 'remove-single';\n\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + utils.escape_html(options.title) + '\">' + options.label + '</a>';\n\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn $('<span>').append(html_container)\n\t\t\t\t\t\t.append(html_element);\n\t\t\t\t};\n\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\n\t\t\tvar multiClose = function(thisRef, options) {\n\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + utils.escape_html(options.title) + '\">' + options.label + '</a>';\n\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n});\ndefine('skylark-selectize/plugins/restore_on_backspace/plugin',[\n\t\"skylark-jquery\",\n\t\"../../Selectize\"\n],function($,Selectize) {\n\t/**\n\t * Plugin: \"restore_on_backspace\" (selectize.js)\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n});\ndefine('skylark-selectize/main',[\r\n\t\"./Selectize\",\r\n\t\"./selectize.jquery\",\r\n\t\"./plugins/drag_drop/plugin\",\r\n\t\"./plugins/dropdown_header/plugin\",\r\n\t\"./plugins/optgroup_columns/plugin\",\r\n\t\"./plugins/remove_button/plugin\",\r\n\t\"./plugins/restore_on_backspace/plugin\"\r\n],function(Selectize){\r\n\treturn Selectize;\r\n});\ndefine('skylark-selectize', ['skylark-selectize/main'], function (main) { return main; });\n\n"]}