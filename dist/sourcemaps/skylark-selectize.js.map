{"version":3,"sources":["skylark-selectize.js"],"names":["define","IS_MAC","test","navigator","userAgent","KEY_CMD","KEY_CTRL","SUPPORTS_VALIDITY_API","window","document","createElement","validity","KEY_A","KEY_COMMA","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_P","KEY_RIGHT","KEY_DOWN","KEY_N","KEY_BACKSPACE","KEY_DELETE","KEY_SHIFT","KEY_TAB","TAG_SELECT","TAG_INPUT","hook","before","self","method","fn","original","apply","arguments","after","result","getSelection","input","start","selectionStart","length","selectionEnd","selection","focus","sel","createRange","selLen","text","moveStart","value","transferStyles","$from","$to","properties","i","n","styles","css","measureString","str","$parent","Selectize","$testInput","$","position","top","left","width","padding","whiteSpace","appendTo","isset","object","hash_key","escape_html","replace","escape_replace","debounce","delay","timeout","this","args","clearTimeout","setTimeout","debounce_events","types","type","trigger","event_args","indexOf","hasOwnProperty","watchChildEvent","event","selector","on","e","child","target","parentNode","currentTarget","autoGrow","$input","currentWidth","update","options","keyCode","printable","placeholder","shift","character","metaKey","altKey","force","data","val","toLowerCase","substring","shiftKey","String","fromCharCode","toUpperCase","attr","triggerHandler","domToString","d","tmp","appendChild","cloneNode","innerHTML","logError","message","console","error","component","explanation","group","groupEnd","MicroEvent","prototype","fct","_events","push","off","splice","Array","slice","call","mixin","destObject","props","removeHighlight","find","each","firstChild","nodeName","parent","replaceChild","normalize","end","$element","pattern","regex","RegExp","highlight","node","skip","nodeType","pos","search","match","spannode","className","middlebit","splitText","middleclone","childNodes","tagName","skylark","constants","utils","settings","dir","selectize","computedStyle","getComputedStyle","getPropertyValue","currentStyle","direction","parents","extend","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isBlurring","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","items","renderCache","onSearchChange","loadThrottle","sifter","Sifter","diacritics","registerOption","registerOptionGroup","mode","maxItems","hideSelected","initializePlugins","plugins","setupCallbacks","setupTemplates","setup","MicroPlugin","$wrapper","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","$window","$document","addClass","wrapperClass","inputClass","dropdownParent","dropdownClass","hide","dropdownContentClass","copyClassesToDropdown","style","names","join","splitOn","delimiter","delimiterEscaped","stopImmediatePropagation","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","blur","onBlur","onFocus","paste","onPaste","has","revertSettings","$children","children","detach","tabindex","isArray","setValue","preventDefault","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","disable","onChange","preload","field_label","labelField","field_optgroup","optgroupLabelField","templates","optgroup","html","optgroup_header","escape","option","item","option_create","render","key","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","pastedText","splitInput","trim","split","createItem","which","create","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","refreshOptions","callback","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","createOnBlur","$target","hasClass","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","Math","max","addOption","removeClass","changed","getValue","silent","events","addItems","$item","eventName","idx","begin","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","height","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getScoreFunction","query","getSearchOptions","sort","sortField","field","fields","searchField","conjunction","searchConjunction","nesting","calculateScore","score","Error","id","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","lockOptgroupOrder","a","b","a_order","$order","b_order","dom","tokens","canCreate","prepend","addPrecedence","valueField","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","getElementWithValue","$options","index","eq","$els","getAttribute","values","buffer","isPending","control","insertBefore","value_next","wasFull","insertAtCaret","remove","persist","caret","lock","once","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","opts","label","removeAttr","visibility","display","getBoundingClientRect","$el","el","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","append","enable","destroy","show","removeData","undefined","body","templateName","cache","disabledField","clearCache","filter","createFilter","attach","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_disabled","field_optgroup_label","field_optgroup_value","tag_name","settings_element","optionsMap","readData","JSON","parse","arr","addGroup","$optgroup","init_select","data_raw","init_textbox","support","main"],"mappings":"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","file":"../skylark-selectize.js","sourcesContent":["define('skylark-selectize/constants',[],function() {\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\n\treturn {\n\t\tIS_MAC,\n\t\tKEY_A,\n\t\tKEY_COMMA,\n\t\tKEY_RETURN,\n\t\tKEY_ESC,\n\t\tKEY_LEFT,\n\t\tKEY_UP,\n\t\tKEY_P,\n\t\tKEY_RIGHT,\n\t\tKEY_DOWN,\n\t\tKEY_N,\n\t\tKEY_BACKSPACE,\n\t\tKEY_DELETE,\n\t\tKEY_SHIFT,\n\t\tKEY_CMD,\n\t\tKEY_CTRL,\n\t\tKEY_TAB,\n\t\tTAG_SELECT,\n\t\tTAG_INPUT,\n\t\tSUPPORTS_VALIDITY_API\n\t};\n});\ndefine('skylark-selectize/utils',[],function() {\n\t/**\n\t * Determines if the provided value has been defined.\n\t *\n\t * @param {mixed} object\n\t * @returns {boolean}\n\t */\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\n\tvar hook = {};\n\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (!Selectize.$testInput) {\n\t\t\tSelectize.$testInput = $('<span />').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).appendTo('body');\n\t\t}\n\n\t\tSelectize.$testInput.text(str);\n\n\t\ttransferStyles($parent, Selectize.$testInput, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\n\t\treturn Selectize.$testInput.width();\n\t};\n\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)   || // a-z\n\t\t\t\t\t(keyCode >= 96 && keyCode <= 111)  || // numpad 0-9, numeric operators\n\t\t\t\t\t(keyCode >= 186 && keyCode <= 222) || // semicolon, equal, comma, dash, etc.\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\n\t\ttmp.appendChild(d.cloneNode(true));\n\n\t\treturn tmp.innerHTML;\n\t};\n\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\n\t\tconsole.error(component + \": \" + message)\n\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t};\n\n\treturn {\n\t\tisset,\n\t\thash_key,\n\t\tescape_html,\n\t\tescape_replace,\n\t\thook,\n\t\tdebounce,\n\t\tdebounce_events,\n\t\twatchChildEvent,\n\t\tgetSelection,\n\t\ttransferStyles,\n\t\tmeasureString,\n\t\tautoGrow,\n\t\tdomToString,\n\t\tlogError\n\t};\n});\n\ndefine('skylark-selectize/contrib/microevent',[],function() {\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\n\treturn MicroEvent;\n});\ndefine('skylark-selectize/contrib/highlight',[\n\t\"skylark-jquery\"\n],function($) {\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\n\treturn highlight;\n});\n\ndefine('skylark-selectize/Selectize',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-jquery\",\n\t\"./constants\",\n\t\"./utils\",\n\t\"./contrib/microevent\",\n\t\"./contrib/highlight\"\n\t\n],function(skylark,$,constants,utils,MicroEvent,highlight){\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : utils.debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tMicroEvent.mixin(Selectize);\n\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tutils.logError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\t$.extend(Selectize.prototype, {\n\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\tutils.watchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tutils.autoGrow($control_input);\n\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\n\t\t\tself.on('change', this.onChange);\n\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase constants.KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase constants.KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase constants.KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\t\tcase constants.KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is utils.debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\n\t\t\tif (!wasFocused) self.trigger('focus');\n\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\n\t\t\tself.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\n\t\t\tutils.debounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\n\t\t\tself.$activeOption = $option.addClass('active');\n\n\t\t\tif (scroll || !isset(scroll)) {\n\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(utils.hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && utils.hash_key(self.$activeOption.attr('data-value'));\n\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: utils.domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$dropdown_content.html(html);\n\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = utils.hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = utils.hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\n\t\t\tvalue     = utils.hash_key(value);\n\t\t\tvalue_new = utils.hash_key(data[self.settings.valueField]);\n\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\t\torder_old = self.options[value].$order;\n\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = utils.hash_key(value);\n\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = utils.hash_key(value);\n\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $();\n\t\t},\n\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\n\t\t\tthis.buffer = null;\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\n\t\t\tutils.debounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = utils.hash_key(value);\n\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = utils.hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tself.lock();\n\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = utils.hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\n\t\t\tvar invalid = !this.items.length;\n\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + utils.escape_html(self.items[i]) + '\" selected=\"selected\">' + utils.escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\n\t\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = utils.getSelection(self.$control_input[0]);\n\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = utils.getSelection(self.$control_input[0]);\n\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\n\t\t\tif (direction === 0) return;\n\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.caretPos = i;\n\t\t},\n\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = utils.hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!utils.isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, utils.escape_html]));\n\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\n\t\t\treturn html[0];\n\t\t},\n\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\n\t});\n\n\treturn skylark.attach(\"intg.Selectize\",Selectize);\n});\n\ndefine('skylark-selectize/defaults',[\n\t\"./Selectize\"\n],function(Selectize) {\n\tSelectize.count = 0;\n\t\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\tdisabledField: 'disabled',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\n\t\tdropdownParent: null,\n\n\t\tcopyClassesToDropdown: true,\n\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\n});\n\ndefine('skylark-selectize/selectize.jquery',[\n\t\"skylark-jquery\",\n\t\"./Selectize\",\n\t\"./defaults\",\n\t\"./utils\"\n],function($,Selectize,utils) {\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\n\t\t\tvar data_raw = $input.attr(attr_data);\n\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\n\t\t\t\tvar value = utils.hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\n\treturn $;\n});\ndefine('skylark-selectize/main',[\r\n\t\"./Selectize\",\r\n\t\"./selectize.jquery\"\r\n],function(Selectize){\r\n\treturn Selectize;\r\n});\ndefine('skylark-selectize', ['skylark-selectize/main'], function (main) { return main; });\n\n"]}